{"ast":null,"code":"var _jsxFileName = \"/Users/alhanger/Documents/Personal/The Jauntee Web App/jauntee-music-stream/jaunt-frontend/src/components/YearSelector.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YearSelector = () => {\n  _s();\n  // State to store our years data\n  const [years, setYears] = useState([]);\n  // State to track loading status\n  const [isLoading, setIsLoading] = useState(true);\n  // State to track any errors\n  const [error, setError] = useState(null);\n  // State for selected year\n  const [selectedYear, setSelectedYear] = useState(null);\n\n  // useEffect hook to fetch data when component mounts\n  useEffect(() => {\n    console.log('API URL:', process.env.REACT_APP_API_URL);\n    fetchYears();\n  }, []); // Empty dependency array means this runs once when component mounts\n\n  // Function to fetch years from your API\n  const fetchYears = async () => {\n    try {\n      setIsLoading(true);\n      const apiURL = process.env.REACT_APP_API_URL || 'http://127.0.0.1:8000';\n      const fullUrl = `${apiURL}/api/shows/years`;\n      console.log('Fetching from: ', fullUrl);\n      const response = await fetch('/api/shows/years');\n      console.log('Response status: ', response.status);\n      if (!response.ok) {\n        throw new Error('Failed to fetch years');\n      }\n      const data = await response.json();\n      console.log('Response text: ', data);\n      setYears(data);\n      // Set first year as default selected if available\n      if (data.length > 0) {\n        setSelectedYear(data[0]);\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Handler for when user selects a year\n  const handleYearChange = event => {\n    setSelectedYear(event.target.value);\n  };\n\n  // Show loading state\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Show error state\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-500 p-4\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Main render\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"block text-sm font-medium mb-2\",\n      children: \"Select Year\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedYear || '',\n      onChange: handleYearChange,\n      className: \"w-full p-2 border rounded bg-white\",\n      children: years.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: year,\n        children: year\n      }, year, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), selectedYear && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4\",\n      children: [\"Selected year: \", selectedYear]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(YearSelector, \"maR3qJZmrxTzRWgiE4/x8PFVM7M=\");\n_c = YearSelector;\nexport default YearSelector;\nvar _c;\n$RefreshReg$(_c, \"YearSelector\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","YearSelector","_s","years","setYears","isLoading","setIsLoading","error","setError","selectedYear","setSelectedYear","console","log","process","env","REACT_APP_API_URL","fetchYears","apiURL","fullUrl","response","fetch","status","ok","Error","data","json","length","err","message","handleYearChange","event","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","year","_c","$RefreshReg$"],"sources":["/Users/alhanger/Documents/Personal/The Jauntee Web App/jauntee-music-stream/jaunt-frontend/src/components/YearSelector.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst YearSelector = () => {\n  // State to store our years data\n  const [years, setYears] = useState([]);\n  // State to track loading status\n  const [isLoading, setIsLoading] = useState(true);\n  // State to track any errors\n  const [error, setError] = useState(null);\n  // State for selected year\n  const [selectedYear, setSelectedYear] = useState(null);\n\n  // useEffect hook to fetch data when component mounts\n  useEffect(() => {\n    console.log('API URL:', process.env.REACT_APP_API_URL);\n    fetchYears();\n  }, []); // Empty dependency array means this runs once when component mounts\n\n  // Function to fetch years from your API\n  const fetchYears = async () => {\n    try {\n      setIsLoading(true);\n      const apiURL = process.env.REACT_APP_API_URL || 'http://127.0.0.1:8000';\n\n      const fullUrl = `${apiURL}/api/shows/years`;\n      console.log('Fetching from: ', fullUrl);\n\n      const response = await fetch('/api/shows/years');\n      console.log('Response status: ', response.status)\n\n      if (!response.ok) {\n        throw new Error('Failed to fetch years');\n      }\n      const data = await response.json();\n      console.log('Response text: ', data);\n      \n      setYears(data);\n      // Set first year as default selected if available\n      if (data.length > 0) {\n        setSelectedYear(data[0]);\n      }\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }  \n  };\n\n  // Handler for when user selects a year\n  const handleYearChange = (event) => {\n    setSelectedYear(event.target.value);\n  };\n\n  // Show loading state\n  if (isLoading) {\n    return (\n      <div className=\"flex justify-center items-center p-4\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500\" />\n      </div>\n    );\n  }\n\n  // Show error state\n  if (error) {\n    return (\n      <div className=\"text-red-500 p-4\">\n        Error: {error}\n      </div>\n    );\n  }\n\n  // Main render\n  return (\n    <div className=\"p-4\">\n      <label className=\"block text-sm font-medium mb-2\">\n        Select Year\n      </label>\n      <select\n        value={selectedYear || ''}\n        onChange={handleYearChange}\n        className=\"w-full p-2 border rounded bg-white\"\n      >\n        {years.map((year) => (\n          <option key={year} value={year}>\n            {year}\n          </option>\n        ))}\n      </select>\n      {selectedYear && (\n        <p className=\"mt-4\">\n          Selected year: {selectedYear}\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default YearSelector;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}